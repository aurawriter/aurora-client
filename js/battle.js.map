{"version":3,"file":"battle.js","names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","terastallized","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","timesAttacked","sprite","battle","scene","addPokemonSprite","_proto","prototype","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","_len","arguments","args","Array","_key","concat","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","get","charAt","transform","_i2","_this$moveTrack2","entry","push","rememberAbility","isNotBase","abilities","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","_this$volatiles$autot","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copySource","volatilesToRemove","_i4","_Dex$statNamesExceptH2","statNamesExceptHP","statName","_i6","removeTransform","copyTypesFrom","preterastallized","_pokemon$getTypes","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","effectiveAbility","getTypeList","dex","ngasActive","isPermanent","_this$getTypes","getSpeciesForme","formechange","species","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","sideid","isFar","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","faintCounter","_proto2","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","_i8","_this$pokemon2","setAvatar","setName","addSideCondition","effect","persist","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","poke1i","poke1","poke2i","poke2","illusionFound","_i10","_this$pokemon4","curPoke","_i12","_this$pokemon6","updateSidebar","switchIn","kwArgs","getEffect","from","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","Object","assign","animUnsummon","switchOut","log","swapTo","target","oslot","swapWith","nslot","faint","animFaint","Battle","_this","options","sidesSwitched","stepQueue","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","subscription","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","teamPreviewCount","gameType","rated","rules","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","debug","joinButtons","autoresize","paused","onResize","width","$","window","_this$scene$$frame","_this$scene$$frame2","scale","$frame","css","_this$scene$$frame3","$logFrame","BattleScene","BattleSceneStub","Error","resetStep","addEventListener","_proto3","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","_i14","_this$pseudoWeather2","_ref","pseudoWeatherName","getAllActive","pokemonList","_i16","_side$active2","_i18","_this$getAllActive2","abilityActive","_this2","a","_i20","_this$getAllActive4","_this$subscription","pause","call","_i22","_this$sides2","resetTurnsSinceMoved","nextStep","removeEventListener","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","_this$subscription2","prematureEnd","_this$subscription3","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","_this$subscription4","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","swapSideConditions","side1","side2","_i24","_ref2","_i26","_this$pseudoWeather4","pWeather","_i28","_this$sides4","cond","_i30","_ref4","useMove","move","fromeffect","callerMoveForPressure","isZ","items","zMoveFrom","slice","BattleItems","zMoveType","type","foeTargets","moveTarget","pressureTarget","_i32","_this$getAllActive6","_i34","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","_i36","_kwArgs$spread$split2","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","category","damageinfo","hover","damageAnim","_i38","_poke$moveTrack2","trackedMove","runResidualAnim","_this$parsePokemonId","parsePokemonId","siden","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","_i40","tmp","frompoke","_i42","volatilesToCopy","_i44","timeOffset","_i46","_this$getAllActive8","_window$Config","_window$Config$server","Config","server","afd","moveid","thaw","_i48","_poke22$side$pokemon2","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","megaStone","isCustomAnim","animTransform","tpoke","targetForme","endsWith","_i50","_tpoke$moveTrack2","resetStatbar","sanitizeName","typeAnim","already","block","interrupt","time","_i52","_poke36$side$pokemon2","Number","number","pokeability","targetability","ability2","foeActive","_i54","_poke36$side$foe$acti2","maybeTarget","broken","getSide","persistent","upkeep","maxTimeLeft","pwID","_i56","_this$getAllActive10","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","_hpstring$split","_hp$split","curhp","colorchar","test","slotChart","b","c","d","e","f","getSwitchedPokemon","_this$parsePokemonId2","parsedPokemonid","rememberTeamPreviewPokemon","_this$parsePokemonId3","findCorrespondingPokemon","_this$parsePokemonId4","_i58","_this$sides$siden$pok2","_this$parsePokemonId5","isInactive","_i60","_side$pokemon2","sidename","command","instantAdd","run","runMajor","resetSides","mod","_i62","_this$sides6","updateGen","ruleName","_args$1$split","totalTime","graceTime","_window$app","_window$app$user","hasIndex","userid","app","user","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","_this$parsePokemonId6","teamPreview","_args$2$match","match","targetIndex","forGen","_this$subscription5","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","_BattleTextParser$par","parseBattleLine","maybeCloseMessagebar","nextLine","_BattleTextParser$par2","err","_this$subscription6","stack","_i64","line","updateBgm","_this$subscription7","play","_this$subscription8","resume","skipTurn","seekBy","deltaTurn","_this$seeking","forceReset","_this$subscription9","animationOn","animationOff","_this$subscription10","shouldStep","_this3","Date","now","startAnimations","animations","interruptionCount","_this$subscription11","finishAnimations","setTimeout","done","setQueue","queue","setMute","require","global"],"sources":["../src/battle.ts"],"sourcesContent":["/**\n * Pokemon Showdown Battle\n *\n * This is the main file for handling battle animations\n *\n * Licensing note: PS's client has complicated licensing:\n * - The client as a whole is AGPLv3\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\n *\n * Layout:\n *\n * - Battle\n *   - Side\n *     - Pokemon\n *   - BattleScene\n *     - BattleLog\n *       - BattleTextParser\n *\n * When a Battle receives a message, it splits the message into tokens\n * and parses what happens, updating its own state, and then telling\n * BattleScene to do any relevant animations. The tokens then get\n * passed directly into BattleLog. If the message is an in-battle\n * message, it'll be extracted by BattleTextParser, which adds it to\n * both the battle log itself, as well as the messagebar.\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nimport {BattleSceneStub} from './battle-scene-stub';\nimport {BattleLog} from './battle-log';\nimport {BattleScene, PokemonSprite, BattleStatusAnims} from './battle-animations';\n\n/** [id, element?, ...misc] */\nexport type EffectState = any[] & {0: ID};\n/** [name, minTimeLeft, maxTimeLeft] */\nexport type WeatherState = [string, number, number];\nexport type HPColor = 'r' | 'y' | 'g';\n\nexport class Pokemon implements PokemonDetails, PokemonHealth {\n\tname = '';\n\tspeciesForme = '';\n\n\t/**\n\t * A string representing information extractable from textual\n\t * messages: side, nickname.\n\t *\n\t * Will be the empty string between Team Preview and the first\n\t * switch-in.\n\t *\n\t * Examples: `p1: Unown` or `p2: Sparky`\n\t */\n\tident = '';\n\t/**\n\t * A string representing visible information not included in\n\t * ident: species, level, gender, shininess. Level is left off\n\t * if it's 100; gender is left off if it's genderless.\n\t *\n\t * Note: Can be partially filled out in Team Preview, because certain\n\t * forme information and shininess isn't visible there. In those\n\t * cases, details can change during the first switch-in, but will\n\t * otherwise not change over the course of a game.\n\t *\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\n\t */\n\tdetails = '';\n\t/**\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\n\t *\n\t * As with ident, blank before the first switch-in, and will only\n\t * change during the first switch-in.\n\t */\n\tsearchid = '';\n\n\tside: Side;\n\tslot = 0;\n\n\tfainted = false;\n\thp = 0;\n\tmaxhp = 1000;\n\tlevel = 100;\n\tgender: GenderName = 'N';\n\tshiny = false;\n\n\thpcolor: HPColor = 'g';\n\tmoves: string[] = [];\n\tability = '';\n\tbaseAbility = '';\n\titem = '';\n\titemEffect = '';\n\tprevItem = '';\n\tprevItemEffect = '';\n\tterastallized: string | '' = '';\n\n\tboosts: {[stat: string]: number} = {};\n\tstatus: StatusName | 'tox' | '' | '???' = '';\n\tstatusStage = 0;\n\tvolatiles: {[effectid: string]: EffectState} = {};\n\tturnstatuses: {[effectid: string]: EffectState} = {};\n\tmovestatuses: {[effectid: string]: EffectState} = {};\n\tlastMove = '';\n\n\t/** [[moveName, ppUsed]] */\n\tmoveTrack: [string, number][] = [];\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\n\ttimesAttacked = 0;\n\n\tsprite: PokemonSprite;\n\n\tconstructor(data: PokemonDetails, side: Side) {\n\t\tthis.side = side;\n\t\tthis.speciesForme = data.speciesForme;\n\n\t\tthis.details = data.details;\n\t\tthis.name = data.name;\n\t\tthis.level = data.level;\n\t\tthis.shiny = data.shiny;\n\t\tthis.gender = data.gender || 'N';\n\t\tthis.ident = data.ident;\n\t\tthis.terastallized = data.terastallized || '';\n\t\tthis.searchid = data.searchid;\n\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\n\t}\n\n\tisActive() {\n\t\treturn this.side.active.includes(this);\n\t}\n\n\t/** @deprecated */\n\tprivate getHPColor(): HPColor {\n\t\tif (this.hpcolor) return this.hpcolor;\n\t\tlet ratio = this.hp / this.maxhp;\n\t\tif (ratio > 0.5) return 'g';\n\t\tif (ratio > 0.2) return 'y';\n\t\treturn 'r';\n\t}\n\t/** @deprecated */\n\tprivate getHPColorClass() {\n\t\tswitch (this.getHPColor()) {\n\t\tcase 'y': return 'hpbar hpbar-yellow';\n\t\tcase 'r': return 'hpbar hpbar-red';\n\t\t}\n\t\treturn 'hpbar';\n\t}\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\n\t\tlet epsilon = 0.5 / 714;\n\n\t\tif (pixels === 0) return [0, 0];\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\n\t\tif (pixels === 9) {\n\t\t\tif (color === 'y') { // ratio is > 0.2\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\n\t\t\t} else { // ratio is <= 0.2\n\t\t\t\treturn [9 / 48, 0.2];\n\t\t\t}\n\t\t}\n\t\tif (pixels === 24) {\n\t\t\tif (color === 'g') { // ratio is > 0.5\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\n\t\t\t} else { // ratio is exactly 0.5\n\t\t\t\treturn [0.5, 0.5];\n\t\t\t}\n\t\t}\n\t\tif (pixels === 48) return [1, 1];\n\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\n\t}\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\n\t\tif (range[0] === range[1]) {\n\t\t\tlet percentage = Math.abs(range[0] * 100);\n\t\t\tif (Math.floor(percentage) === percentage) {\n\t\t\t\treturn percentage + '%';\n\t\t\t}\n\t\t\treturn percentage.toFixed(precision) + '%';\n\t\t}\n\t\tlet lower;\n\t\tlet upper;\n\t\tif (precision === 0) {\n\t\t\tlower = Math.floor(range[0] * 100);\n\t\t\tupper = Math.ceil(range[1] * 100);\n\t\t} else {\n\t\t\tlower = (range[0] * 100).toFixed(precision);\n\t\t\tupper = (range[1] * 100).toFixed(precision);\n\t\t}\n\t\treturn '' + lower + separator + upper + '%';\n\t}\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\n\tgetDamageRange(damage: any): [number, number] {\n\t\tif (damage[1] !== 48) {\n\t\t\tlet ratio = damage[0] / damage[1];\n\t\t\treturn [ratio, ratio];\n\t\t} else if (damage.length === undefined) {\n\t\t\t// wrong pixel damage.\n\t\t\t// this case exists for backward compatibility only.\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\n\t\t}\n\t\t// pixel damage\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\n\t\tif (damage[0] === 0) {\n\t\t\t// no change in displayed pixel width\n\t\t\treturn [0, newrange[1] - newrange[0]];\n\t\t}\n\t\tif (oldrange[0] < newrange[0]) { // swap order\n\t\t\tlet r = oldrange;\n\t\t\toldrange = newrange;\n\t\t\tnewrange = r;\n\t\t}\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\n\t}\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\n\t\tif (!hpstring || !hpstring.length) return null;\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\n\t\tif (parenIndex >= 0) {\n\t\t\t// old style damage and health reporting\n\t\t\tif (parsedamage) {\n\t\t\t\tlet damage = parseFloat(hpstring);\n\t\t\t\t// unusual check preseved for backward compatbility\n\t\t\t\tif (isNaN(damage)) damage = 50;\n\t\t\t\tif (heal) {\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\n\t\t\t\t} else {\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\n\t\t\t\t}\n\t\t\t\t// parse the absolute health information\n\t\t\t\tlet ret = this.healthParse(hpstring);\n\t\t\t\tif (ret && (ret[1] === 100)) {\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\n\t\t\t\t\treturn [damage, 100, damage];\n\t\t\t\t}\n\t\t\t\t// complicated expressions preserved for backward compatibility\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\n\t\t\t\treturn [pixels, 48, percent];\n\t\t\t}\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\n\t\t}\n\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\n\t\tlet oldmaxhp = this.maxhp;\n\t\tlet oldwidth = this.hpWidth(100);\n\t\tlet oldcolor = this.hpcolor;\n\n\t\tthis.side.battle.parseHealth(hpstring, this);\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\n\t\t\toldmaxhp = oldhp = this.maxhp;\n\t\t}\n\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\n\t\tlet delta = this.hp - oldnum;\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\n\t}\n\tcheckDetails(details?: string) {\n\t\tif (!details) return false;\n\t\tif (details === this.details) return true;\n\t\tif (this.searchid) return false;\n\t\tif (details.indexOf(', shiny') >= 0) {\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\n\t\t}\n\t\t// the actual forme was hidden on Team Preview\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\n\t\treturn (details === this.details);\n\t}\n\tgetIdent() {\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\n\t}\n\tremoveVolatile(volatile: ID) {\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\n\t\tif (!this.hasVolatile(volatile)) return;\n\t\tdelete this.volatiles[volatile];\n\t}\n\taddVolatile(volatile: ID, ...args: any[]) {\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\n\t\tthis.side.battle.scene.addEffect(this, volatile);\n\t}\n\thasVolatile(volatile: ID) {\n\t\treturn !!this.volatiles[volatile];\n\t}\n\tremoveTurnstatus(volatile: ID) {\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\n\t\tif (!this.hasTurnstatus(volatile)) return;\n\t\tdelete this.turnstatuses[volatile];\n\t}\n\taddTurnstatus(volatile: ID) {\n\t\tvolatile = toID(volatile);\n\t\tthis.side.battle.scene.addEffect(this, volatile);\n\t\tif (this.hasTurnstatus(volatile)) return;\n\t\tthis.turnstatuses[volatile] = [volatile];\n\t}\n\thasTurnstatus(volatile: ID) {\n\t\treturn !!this.turnstatuses[volatile];\n\t}\n\tclearTurnstatuses() {\n\t\tfor (let id in this.turnstatuses) {\n\t\t\tthis.removeTurnstatus(id as ID);\n\t\t}\n\t\tthis.turnstatuses = {};\n\t\tthis.side.battle.scene.updateStatbar(this);\n\t}\n\tremoveMovestatus(volatile: ID) {\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\n\t\tif (!this.hasMovestatus(volatile)) return;\n\t\tdelete this.movestatuses[volatile];\n\t}\n\taddMovestatus(volatile: ID) {\n\t\tvolatile = toID(volatile);\n\t\tif (this.hasMovestatus(volatile)) return;\n\t\tthis.movestatuses[volatile] = [volatile];\n\t\tthis.side.battle.scene.addEffect(this, volatile);\n\t}\n\thasMovestatus(volatile: ID) {\n\t\treturn !!this.movestatuses[volatile];\n\t}\n\tclearMovestatuses() {\n\t\tfor (let id in this.movestatuses) {\n\t\t\tthis.removeMovestatus(id as ID);\n\t\t}\n\t\tthis.movestatuses = {};\n\t}\n\tclearVolatiles() {\n\t\tthis.volatiles = {};\n\t\tthis.clearTurnstatuses();\n\t\tthis.clearMovestatuses();\n\t\tthis.side.battle.scene.clearEffects(this);\n\t}\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\n\t\tif (recursionSource === this.ident) return;\n\t\tmoveName = Dex.moves.get(moveName).name;\n\t\tif (moveName.charAt(0) === '*') return;\n\t\tif (moveName === 'Struggle') return;\n\t\tif (this.volatiles.transform) {\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\n\t\t\tif (!recursionSource) recursionSource = this.ident;\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\n\t\t\tmoveName = '*' + moveName;\n\t\t}\n\t\tfor (const entry of this.moveTrack) {\n\t\t\tif (moveName === entry[0]) {\n\t\t\t\tentry[1] += pp;\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.moveTrack.push([moveName, pp]);\n\t}\n\trememberAbility(ability: string, isNotBase?: boolean) {\n\t\tability = Dex.abilities.get(ability).name;\n\t\tthis.ability = ability;\n\t\tif (!this.baseAbility && !isNotBase) {\n\t\t\tthis.baseAbility = ability;\n\t\t}\n\t}\n\tgetBoost(boostStat: BoostStatName) {\n\t\tlet boostStatTable = {\n\t\t\tatk: 'Atk',\n\t\t\tdef: 'Def',\n\t\t\tspa: 'SpA',\n\t\t\tspd: 'SpD',\n\t\t\tspe: 'Spe',\n\t\t\taccuracy: 'Accuracy',\n\t\t\tevasion: 'Evasion',\n\t\t\tspc: 'Spc',\n\t\t};\n\t\tif (!this.boosts[boostStat]) {\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\n\t\t}\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\n\t\t\tif (this.boosts[boostStat] > 0) {\n\t\t\t\tlet goodBoostTable = [\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\n\t\t\t\t];\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t\t\t}\n\t\t\tlet badBoostTable = [\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\n\t\t\t];\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t\t}\n\t\tif (this.boosts[boostStat] > 0) {\n\t\t\tlet goodBoostTable = [\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\n\t\t\t];\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t\t}\n\t\tlet badBoostTable = [\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\n\t\t];\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t}\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\n\t}\n\tgetBoostType(boostStat: BoostStatName) {\n\t\tif (!this.boosts[boostStat]) return 'neutral';\n\t\tif (this.boosts[boostStat] > 0) return 'good';\n\t\treturn 'bad';\n\t}\n\tclearVolatile() {\n\t\tthis.ability = this.baseAbility;\n\t\tthis.boosts = {};\n\t\tthis.clearVolatiles();\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\n\t\t\t\tthis.moveTrack.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\t// this.lastMove = '';\n\t\tthis.statusStage = 0;\n\t\tthis.statusData.toxicTurns = 0;\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\n\t}\n\t/**\n\t * copyAll = false means Baton Pass,\n\t * copyAll = true means Illusion breaking\n\t * copyAll = 'shedtail' means Shed Tail\n\t */\n\tcopyVolatileFrom(pokemon: Pokemon, copySource?: | 'shedtail' | boolean) {\n\t\tthis.boosts = pokemon.boosts;\n\t\tthis.volatiles = pokemon.volatiles;\n\t\t// this.lastMove = pokemon.lastMove; // I think\n\t\tif (!copySource) {\n\t\t\tconst volatilesToRemove = [\n\t\t\t\t'airballoon', 'attract', 'autotomize', 'disable', 'encore', 'foresight', 'gmaxchistrike', 'imprison', 'laserfocus', 'mimic', 'miracleeye', 'nightmare', 'saltcure', 'smackdown', 'stockpile1', 'stockpile2', 'stockpile3', 'torment', 'typeadd', 'typechange', 'yawn',\n\t\t\t];\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tvolatilesToRemove.push('protosynthesis' + statName);\n\t\t\t\tvolatilesToRemove.push('quarkdrive' + statName);\n\t\t\t}\n\t\t\tfor (const volatile of volatilesToRemove) {\n\t\t\t\tdelete this.volatiles[volatile];\n\t\t\t}\n\t\t}\n\t\tif (copySource === 'shedtail') {\n\t\t\tfor (let i in this.volatiles) {\n\t\t\t\tif (i === 'substitute') continue;\n\t\t\t\tdelete this.volatiles[i];\n\t\t\t}\n\t\t\tthis.boosts = {};\n\t\t}\n\t\tdelete this.volatiles['transform'];\n\t\tdelete this.volatiles['formechange'];\n\n\t\tpokemon.boosts = {};\n\t\tpokemon.volatiles = {};\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\n\t\tpokemon.statusStage = 0;\n\t}\n\tcopyTypesFrom(pokemon: Pokemon, preterastallized = false) {\n\t\tconst [types, addedType] = pokemon.getTypes(undefined, preterastallized);\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\n\t\tif (addedType) {\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\n\t\t} else {\n\t\t\tthis.removeVolatile('typeadd' as ID);\n\t\t}\n\t}\n\tgetTypes(serverPokemon?: ServerPokemon, preterastallized = false): [ReadonlyArray<TypeName>, TypeName | ''] {\n\t\tlet types: ReadonlyArray<TypeName>;\n\t\tif (this.terastallized && !preterastallized) {\n\t\t\ttypes = [this.terastallized as TypeName];\n\t\t} else if (this.volatiles.typechange) {\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\n\t\t} else {\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\n\t\t}\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\n\t\t\tif (!types.length) types = ['Normal'];\n\t\t}\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\n\t\treturn [types, addedType];\n\t}\n\tisGrounded(serverPokemon?: ServerPokemon) {\n\t\tconst battle = this.side.battle;\n\t\tif (battle.hasPseudoWeather('Gravity')) {\n\t\t\treturn true;\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\n\t\t\treturn true;\n\t\t} else if (this.volatiles['smackdown']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\n\t\tlet ability = toID(this.effectiveAbility(serverPokemon));\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\n\t\t\titem = '' as ID;\n\t\t}\n\n\t\tif (item === 'ironball') {\n\t\t\treturn true;\n\t\t}\n\t\tif (ability === 'levitate') {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\n\t\t\treturn false;\n\t\t}\n\t\tif (item === 'airballoon') {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\n\t}\n\teffectiveAbility(serverPokemon?: ServerPokemon) {\n\t\tif (this.fainted || this.volatiles['gastroacid']) return '';\n\t\tconst ability = this.side.battle.dex.abilities.get(\n\t\t\tserverPokemon?.ability || this.ability || serverPokemon?.baseAbility || ''\n\t\t);\n\t\tif (this.side.battle.ngasActive() && !ability.isPermanent) {\n\t\t\treturn '';\n\t\t}\n\t\treturn ability.name;\n\t}\n\tgetTypeList(serverPokemon?: ServerPokemon, preterastallized = false) {\n\t\tconst [types, addedType] = this.getTypes(serverPokemon, preterastallized);\n\t\treturn addedType ? types.concat(addedType) : types;\n\t}\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\n\t}\n\tgetSpecies(serverPokemon?: ServerPokemon) {\n\t\treturn this.side.battle.dex.species.get(this.getSpeciesForme(serverPokemon));\n\t}\n\tgetBaseSpecies() {\n\t\treturn this.side.battle.dex.species.get(this.speciesForme);\n\t}\n\treset() {\n\t\tthis.clearVolatile();\n\t\tthis.hp = this.maxhp;\n\t\tthis.fainted = false;\n\t\tthis.status = '';\n\t\tthis.moveTrack = [];\n\t\tthis.name = this.name || this.speciesForme;\n\t}\n\t// This function is used for two things:\n\t//   1) The percentage to display beside the HP bar.\n\t//   2) The width to draw an HP bar.\n\t//\n\t// This function is NOT used in the calculation of any other displayed\n\t// percentages or ranges, which have their own, more complex, formulae.\n\thpWidth(maxWidth: number) {\n\t\tif (this.fainted || !this.hp) return 0;\n\n\t\t// special case for low health...\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\n\n\t\tif (this.maxhp === 48) {\n\t\t\t// Draw the health bar to the middle of the range.\n\t\t\t// This affects the width of the visual health bar *only*; it\n\t\t\t// does not affect the ranges displayed in any way.\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\n\t\t}\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\n\t\t\tpercentage = 99;\n\t\t}\n\t\treturn percentage * maxWidth / 100;\n\t}\n\tgetHPText(precision = 1) {\n\t\treturn Pokemon.getHPText(this, precision);\n\t}\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\n\t}\n\tdestroy() {\n\t\tif (this.sprite) this.sprite.destroy();\n\t\tthis.sprite = null!;\n\t\tthis.side = null!;\n\t}\n}\n\nexport class Side {\n\tbattle: Battle;\n\tname = '';\n\tid = '';\n\tsideid: SideID;\n\tn: number;\n\tisFar: boolean;\n\tfoe: Side = null!;\n\tally: Side | null = null;\n\tavatar: string = 'unknown';\n\trating: string = '';\n\ttotalPokemon = 6;\n\tx = 0;\n\ty = 0;\n\tz = 0;\n\tmissedPokemon: Pokemon = null!;\n\n\twisher: Pokemon | null = null;\n\n\tactive = [null] as (Pokemon | null)[];\n\tlastPokemon = null as Pokemon | null;\n\tpokemon = [] as Pokemon[];\n\n\t/** [effectName, levels, minDuration, maxDuration] */\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\n\tfaintCounter = 0;\n\n\tconstructor(battle: Battle, n: number) {\n\t\tthis.battle = battle;\n\t\tthis.n = n;\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\n\t\tthis.isFar = !!(n % 2);\n\t}\n\n\trollTrainerSprites() {\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\n\t}\n\n\tbehindx(offset: number) {\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\n\t}\n\tbehindy(offset: number) {\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\n\t}\n\tleftof(offset: number) {\n\t\treturn (!this.isFar ? -1 : 1) * offset;\n\t}\n\tbehind(offset: number) {\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\n\t}\n\n\tclearPokemon() {\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\n\t\tthis.pokemon = [];\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\n\t\tthis.lastPokemon = null;\n\t}\n\treset() {\n\t\tthis.clearPokemon();\n\t\tthis.sideConditions = {};\n\t\tthis.faintCounter = 0;\n\t}\n\tsetAvatar(avatar: string) {\n\t\tthis.avatar = avatar;\n\t}\n\tsetName(name: string, avatar?: string) {\n\t\tif (name) this.name = name;\n\t\tthis.id = toID(this.name);\n\t\tif (avatar) {\n\t\t\tthis.setAvatar(avatar);\n\t\t} else {\n\t\t\tthis.rollTrainerSprites();\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\n\t\t}\n\t}\n\taddSideCondition(effect: Effect, persist: boolean) {\n\t\tlet condition = effect.id;\n\t\tif (this.sideConditions[condition]) {\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\n\t\t\t\tthis.sideConditions[condition][1]++;\n\t\t\t}\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\n\t\t\treturn;\n\t\t}\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\n\t\tswitch (condition) {\n\t\tcase 'auroraveil':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\n\t\t\tbreak;\n\t\tcase 'reflect':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\n\t\t\tbreak;\n\t\tcase 'safeguard':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, persist ? 7 : 5, 0];\n\t\t\tbreak;\n\t\tcase 'lightscreen':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\n\t\t\tbreak;\n\t\tcase 'mist':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\n\t\t\tbreak;\n\t\tcase 'tailwind':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? persist ? 6 : 4 : persist ? 5 : 3, 0];\n\t\t\tbreak;\n\t\tcase 'luckychant':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\n\t\t\tbreak;\n\t\tcase 'stealthrock':\n\t\tcase 'spikes':\n\t\tcase 'toxicspikes':\n\t\tcase 'stickyweb':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\n\t\t\tbreak;\n\t\tcase 'gmaxwildfire':\n\t\tcase 'gmaxvolcalith':\n\t\tcase 'gmaxvinelash':\n\t\tcase 'gmaxcannonade':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\n\t\t\tbreak;\n\t\tcase 'grasspledge':\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\n\t\t\tbreak;\n\t\tcase 'waterpledge':\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\n\t\t\tbreak;\n\t\tcase 'firepledge':\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\n\t\t\tbreak;\n\t\t}\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\n\t}\n\tremoveSideCondition(condition: string) {\n\t\tconst id = toID(condition);\n\t\tif (!this.sideConditions[id]) return;\n\t\tdelete this.sideConditions[id];\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\n\t}\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\n\n\t\tconst data = this.battle.parseDetails(name, ident, details);\n\t\tconst poke = new Pokemon(data, this);\n\t\tif (oldItem) poke.item = oldItem;\n\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\n\t\tpoke.reset();\n\n\t\tif (replaceSlot >= 0) {\n\t\t\tthis.pokemon[replaceSlot] = poke;\n\t\t} else {\n\t\t\tthis.pokemon.push(poke);\n\t\t}\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\n\t\t\t// check for Illusion\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\n\t\t\tlet toRemove = -1;\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\n\t\t\t\tif (!poke1.searchid) continue;\n\t\t\t\tif (poke1.searchid in existingTable) {\n\t\t\t\t\tlet poke2i = existingTable[poke1.searchid];\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\n\t\t\t\t\tif (poke === poke1) {\n\t\t\t\t\t\ttoRemove = poke2i;\n\t\t\t\t\t} else if (poke === poke2) {\n\t\t\t\t\t\ttoRemove = poke1i;\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\n\t\t\t\t\t\ttoRemove = poke2i;\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\n\t\t\t\t\t\ttoRemove = poke1i;\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\n\t\t\t\t\t\ttoRemove = poke2i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoRemove = poke1i;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\texistingTable[poke1.searchid] = poke1i;\n\t\t\t}\n\t\t\tif (toRemove >= 0) {\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\n\t\t\t\t\tlet illusionFound = null;\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\n\t\t\t\t\t\tif (curPoke === poke) continue;\n\t\t\t\t\t\tif (curPoke.fainted) continue;\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\n\t\t\t\t\t\t\tillusionFound = curPoke;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!illusionFound) {\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\n\t\t\t\t\t\t// and reguessed.\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\n\t\t\t\t\t\t\tillusionFound = curPoke;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (illusionFound) {\n\t\t\t\t\t\tillusionFound.fainted = true;\n\t\t\t\t\t\tillusionFound.hp = 0;\n\t\t\t\t\t\tillusionFound.status = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\n\t\t\t}\n\t\t}\n\t\tthis.battle.scene.updateSidebar(this);\n\n\t\treturn poke;\n\t}\n\n\tswitchIn(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\n\t\tthis.active[slot] = pokemon;\n\t\tpokemon.slot = slot;\n\t\tpokemon.clearVolatile();\n\t\tpokemon.lastMove = '';\n\t\tthis.battle.lastMove = 'switch-in';\n\t\tconst effect = Dex.getEffect(kwArgs.from);\n\t\tif (['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!, effect.id === 'shedtail' ? 'shedtail' : false);\n\t\t}\n\n\t\tthis.battle.scene.animSummon(pokemon, slot);\n\t}\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\n\t\tlet oldpokemon = this.active[slot];\n\t\tif (oldpokemon === pokemon) return;\n\t\tthis.lastPokemon = oldpokemon;\n\t\tif (oldpokemon) {\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\n\t\t\toldpokemon.clearVolatile();\n\t\t}\n\t\tpokemon.clearVolatile();\n\t\tpokemon.lastMove = '';\n\t\tthis.battle.lastMove = 'switch-in';\n\t\tthis.active[slot] = pokemon;\n\t\tpokemon.slot = slot;\n\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\n\t}\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\n\t\tlet oldpokemon = this.active[slot];\n\t\tif (pokemon === oldpokemon) return;\n\t\tthis.lastPokemon = oldpokemon;\n\t\tpokemon.clearVolatile();\n\t\tif (oldpokemon) {\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\n\t\t\tpokemon.hp = oldpokemon.hp;\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\n\t\t\tpokemon.status = oldpokemon.status;\n\t\t\tpokemon.terastallized = oldpokemon.terastallized;\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\n\t\t\t// technically we also know its status but only at the end of the turn, not here\n\t\t\toldpokemon.fainted = false;\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\n\t\t\toldpokemon.status = '???';\n\t\t\toldpokemon.terastallized = '';\n\t\t}\n\t\tthis.active[slot] = pokemon;\n\t\tpokemon.slot = slot;\n\n\t\tif (oldpokemon) {\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\n\t\t}\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\n\t}\n\tswitchOut(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\n\t\tconst effect = Dex.getEffect(kwArgs.from);\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\n\t\t\tpokemon.clearVolatile();\n\t\t} else {\n\t\t\tpokemon.removeVolatile('transform' as ID);\n\t\t\tpokemon.removeVolatile('formechange' as ID);\n\t\t}\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail', 'teleport'].includes(effect.id)) {\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: effect.id});\n\t\t}\n\t\tpokemon.statusData.toxicTurns = 0;\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\n\t\tthis.lastPokemon = pokemon;\n\t\tthis.active[slot] = null;\n\n\t\tthis.battle.scene.animUnsummon(pokemon);\n\t}\n\tswapTo(pokemon: Pokemon, slot: number) {\n\t\tif (pokemon.slot === slot) return;\n\t\tlet target = this.active[slot];\n\n\t\tlet oslot = pokemon.slot;\n\n\t\tpokemon.slot = slot;\n\t\tif (target) target.slot = oslot;\n\n\t\tthis.active[slot] = pokemon;\n\t\tthis.active[oslot] = target;\n\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\n\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\n\t}\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\n\t\t// method provided for backwards compatibility only\n\t\tif (pokemon === target) return;\n\n\t\tlet oslot = pokemon.slot;\n\t\tlet nslot = target.slot;\n\n\t\tpokemon.slot = nslot;\n\t\ttarget.slot = oslot;\n\t\tthis.active[nslot] = pokemon;\n\t\tthis.active[oslot] = target;\n\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\n\t\tthis.battle.scene.animUnsummon(target, true);\n\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\n\t\tthis.battle.scene.animSummon(target, oslot, true);\n\t}\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\n\t\tpokemon.clearVolatile();\n\t\tthis.lastPokemon = pokemon;\n\t\tthis.active[slot] = null;\n\n\t\tpokemon.fainted = true;\n\t\tpokemon.hp = 0;\n\t\tpokemon.terastallized = '';\n\t\tpokemon.details = pokemon.details.replace(/, tera:[a-z]+/i, '');\n\t\tpokemon.searchid = pokemon.searchid.replace(/, tera:[a-z]+/i, '');\n\t\tif (pokemon.side.faintCounter < 100) pokemon.side.faintCounter++;\n\n\t\tthis.battle.scene.animFaint(pokemon);\n\t}\n\tdestroy() {\n\t\tthis.clearPokemon();\n\t\tthis.battle = null!;\n\t\tthis.foe = null!;\n\t}\n}\n\nexport interface PokemonDetails {\n\tdetails: string;\n\tname: string;\n\tspeciesForme: string;\n\tlevel: number;\n\tshiny: boolean;\n\tgender: GenderName | '';\n\tident: string;\n\tterastallized: string;\n\tsearchid: string;\n}\nexport interface PokemonHealth {\n\thp: number;\n\tmaxhp: number;\n\thpcolor: HPColor | '';\n\tstatus: StatusName | 'tox' | '' | '???';\n\tfainted?: boolean;\n}\nexport interface ServerPokemon extends PokemonDetails, PokemonHealth {\n\tident: string;\n\tdetails: string;\n\tcondition: string;\n\tactive: boolean;\n\t/** unboosted stats */\n\tstats: {\n\t\tatk: number,\n\t\tdef: number,\n\t\tspa: number,\n\t\tspd: number,\n\t\tspe: number,\n\t};\n\t/** currently an ID, will revise to name */\n\tmoves: string[];\n\t/** currently an ID, will revise to name */\n\tbaseAbility: string;\n\t/** currently an ID, will revise to name */\n\tability?: string;\n\t/** currently an ID, will revise to name */\n\titem: string;\n\t/** currently an ID, will revise to name */\n\tpokeball: string;\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\n\tgigantamax: string | false;\n\t/** always the Tera Type of the Pokemon, regardless of whether it is terastallized or not */\n\tteraType: string;\n\t/** falsy if the pokemon is not terastallized, otherwise it is the Tera Type of the Pokemon */\n\tterastallized: string;\n}\n\nexport class Battle {\n\tscene: BattleSceneStub;\n\n\tsidesSwitched = false;\n\n\tstepQueue: string[];\n\t/** See battle.instantAdd */\n\tpreemptStepQueue: string[] = [];\n\twaitForAnimations: true | false | 'simult' = true;\n\t/** the index of `stepQueue` currently being animated */\n\tcurrentStep = 0;\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\n\tseeking: number | null = null;\n\n\tactiveMoveIsSpread: string | null = null;\n\n\tsubscription: ((state:\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\n\t) => void) | null;\n\n\tmute = false;\n\tmessageFadeTime = 300;\n\tmessageShownTime = 1;\n\t/** for tracking when to accelerate animations in long battles full of double switches */\n\tturnsSinceMoved = 0;\n\n\t/**\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\n\t */\n\tturn = -1;\n\t/**\n\t * Are we at the end of the queue and waiting for more input?\n\t *\n\t * In addition to at the end of a battle, this is also true if you're\n\t * playing/watching a battle live, and waiting for a player to make a move.\n\t */\n\tatQueueEnd = false;\n\t/**\n\t * Has the battle ever been played or fast-forwarded?\n\t *\n\t * This is not exactly `turn > 0` because if you start playing a replay,\n\t * then pause before turn 1, `turn` will still be 0, but playback should\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\n\t */\n\tstarted = false;\n\t/**\n\t * Has playback gotten to the point where a player has won or tied?\n\t * (Affects whether BGM is playing)\n\t */\n\tended = false;\n\tisReplay = false;\n\tusesUpkeep = false;\n\tweather = '' as ID;\n\tpseudoWeather = [] as WeatherState[];\n\tweatherTimeLeft = 0;\n\tweatherMinTimeLeft = 0;\n\t/**\n\t * The side from which perspective we're viewing. Should be identical to\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\n\t * near side, and `mySide` is the active player.\n\t */\n\tmySide: Side = null!;\n\tnearSide: Side = null!;\n\tfarSide: Side = null!;\n\tp1: Side = null!;\n\tp2: Side = null!;\n\tp3?: Side = null!;\n\tp4?: Side = null!;\n\tpokemonControlled = 0;\n\tsides: Side[] = null!;\n\tmyPokemon: ServerPokemon[] | null = null;\n\tmyAllyPokemon: ServerPokemon[] | null = null;\n\tlastMove = '';\n\n\tgen = 8;\n\tdex: ModdedDex = Dex;\n\tteamPreviewCount = 0;\n\tspeciesClause = false;\n\ttier = '';\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\n\trated: string | boolean = false;\n\trules: {[ruleName: string]: 1 | 0} = {};\n\tisBlitz = false;\n\tendLastTurnPending = false;\n\ttotalTimeLeft = 0;\n\tgraceTimeLeft = 0;\n\t/**\n\t * true: timer on, state unknown\n\t * false: timer off\n\t * number: seconds left this turn\n\t */\n\tkickingInactive: number | boolean = false;\n\n\t// options\n\tid = '';\n\t/** used to forward some information to the room in the old client */\n\troomid = '';\n\thardcoreMode = false;\n\tignoreNicks = !!Dex.prefs('ignorenicks');\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\n\tignoreSpects = !!Dex.prefs('ignorespects');\n\tdebug: boolean;\n\tjoinButtons = false;\n\tautoresize: boolean;\n\n\t/**\n\t * The actual pause state. Will only be true if playback is actually\n\t * paused, not just waiting for the opponent to make a move.\n\t */\n\tpaused: boolean;\n\n\tconstructor(options: {\n\t\t$frame?: JQuery<HTMLElement>,\n\t\t$logFrame?: JQuery<HTMLElement>,\n\t\tid?: ID,\n\t\tlog?: string[] | string,\n\t\tpaused?: boolean,\n\t\tisReplay?: boolean,\n\t\tdebug?: boolean,\n\t\tsubscription?: Battle['subscription'],\n\t\t/** autoresize `$frame` for browsers below 640px width (mobile) */\n\t\tautoresize?: boolean,\n\t} = {}) {\n\t\tthis.id = options.id || '';\n\n\t\tif (options.$frame && options.$logFrame) {\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\n\t\t} else if (!options.$frame && !options.$logFrame) {\n\t\t\tthis.scene = new BattleSceneStub();\n\t\t} else {\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\n\t\t}\n\n\t\tthis.paused = !!options.paused;\n\t\tthis.started = !this.paused;\n\t\tthis.debug = !!options.debug;\n\t\tif (typeof options.log === 'string') options.log = options.log.split('\\n');\n\t\tthis.stepQueue = options.log || [];\n\t\tthis.subscription = options.subscription || null;\n\t\tthis.autoresize = !!options.autoresize;\n\n\t\tthis.p1 = new Side(this, 0);\n\t\tthis.p2 = new Side(this, 1);\n\t\tthis.sides = [this.p1, this.p2];\n\t\tthis.p2.foe = this.p1;\n\t\tthis.p1.foe = this.p2;\n\t\tthis.nearSide = this.mySide = this.p1;\n\t\tthis.farSide = this.p2;\n\n\t\tthis.resetStep();\n\t\tif (this.autoresize) {\n\t\t\twindow.addEventListener('resize', this.onResize);\n\t\t\tthis.onResize();\n\t\t}\n\t}\n\n\tonResize = () => {\n\t\tconst width = $(window).width()!;\n\t\tif (width < 950 || this.hardcoreMode) {\n\t\t\tthis.messageShownTime = 500;\n\t\t} else {\n\t\t\tthis.messageShownTime = 1;\n\t\t}\n\t\tif (width && width < 640) {\n\t\t\tconst scale = (width / 640);\n\t\t\tthis.scene.$frame?.css('transform', 'scale(' + scale + ')');\n\t\t\tthis.scene.$frame?.css('transform-origin', 'top left');\n\t\t\t// this.$foeHint.css('transform', 'scale(' + scale + ')');\n\t\t} else {\n\t\t\tthis.scene.$frame?.css('transform', 'none');\n\t\t\t// this.$foeHint.css('transform', 'none');\n\t\t}\n\t};\n\n\tsubscribe(listener: Battle['subscription']) {\n\t\tthis.subscription = listener;\n\t}\n\n\tremovePseudoWeather(weather: string) {\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\n\t\t\t\tthis.scene.updateWeather();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\n\t\tthis.scene.updateWeather();\n\t}\n\thasPseudoWeather(weather: string) {\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\n\t\t\tif (weather === pseudoWeatherName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetAllActive() {\n\t\tconst pokemonList = [];\n\t\t// Sides 3 and 4 are synced with sides 1 and 2, so they don't need to be checked\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst side = this.sides[i];\n\t\t\tfor (const active of side.active) {\n\t\t\t\tif (active && !active.fainted) {\n\t\t\t\t\tpokemonList.push(active);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pokemonList;\n\t}\n\tngasActive() {\n\t\tfor (const active of this.getAllActive()) {\n\t\t\tif (active.ability === 'Neutralizing Gas' && !active.volatiles['gastroacid']) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tabilityActive(abilities: string | string[]) {\n\t\tif (typeof abilities === 'string') abilities = [abilities];\n\t\tif (this.ngasActive()) {\n\t\t\tabilities = abilities.filter(a => this.dex.abilities.get(a).isPermanent);\n\t\t\tif (!abilities.length) return false;\n\t\t}\n\t\tfor (const active of this.getAllActive()) {\n\t\t\tif (abilities.includes(active.ability) && !active.volatiles['gastroacid']) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treset() {\n\t\tthis.paused = true;\n\t\tthis.scene.pause();\n\t\tthis.resetStep();\n\t\tthis.subscription?.('paused');\n\t}\n\tresetStep() {\n\t\t// battle state\n\t\tthis.turn = -1;\n\t\tthis.started = !this.paused;\n\t\tthis.ended = false;\n\t\tthis.atQueueEnd = false;\n\t\tthis.weather = '' as ID;\n\t\tthis.weatherTimeLeft = 0;\n\t\tthis.weatherMinTimeLeft = 0;\n\t\tthis.pseudoWeather = [];\n\t\tthis.lastMove = '';\n\n\t\tfor (const side of this.sides) {\n\t\t\tif (side) side.reset();\n\t\t}\n\t\tthis.myPokemon = null;\n\t\tthis.myAllyPokemon = null;\n\n\t\t// DOM state\n\t\tthis.scene.reset();\n\n\t\t// activity queue state\n\t\tthis.activeMoveIsSpread = null;\n\t\tthis.currentStep = 0;\n\t\tthis.resetTurnsSinceMoved();\n\t\tthis.nextStep();\n\t}\n\tdestroy() {\n\t\tif (this.autoresize) {\n\t\t\twindow.removeEventListener('resize', this.onResize);\n\t\t}\n\t\tthis.scene.destroy();\n\n\t\tfor (let i = 0; i < this.sides.length; i++) {\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\n\t\t\tthis.sides[i] = null!;\n\t\t}\n\t\tthis.mySide = null!;\n\t\tthis.nearSide = null!;\n\t\tthis.farSide = null!;\n\t\tthis.p1 = null!;\n\t\tthis.p2 = null!;\n\t\tthis.p3 = null!;\n\t\tthis.p4 = null!;\n\t}\n\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\n\t\tthis.scene.log.add(args, kwArgs, preempt);\n\t}\n\n\tresetToCurrentTurn() {\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\n\t}\n\tswitchSides() {\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\n\t}\n\tsetPerspective(sideid: SideID) {\n\t\tif (this.mySide.sideid === sideid) return;\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\n\t\tconst side = this[sideid];\n\t\tif (!side) return;\n\t\tthis.mySide = side;\n\n\t\tif ((side.n % 2) === this.p1.n) {\n\t\t\tthis.sidesSwitched = false;\n\t\t\tthis.nearSide = this.p1;\n\t\t\tthis.farSide = this.p2;\n\t\t} else {\n\t\t\tthis.sidesSwitched = true;\n\t\t\tthis.nearSide = this.p2;\n\t\t\tthis.farSide = this.p1;\n\t\t}\n\t\tthis.nearSide.isFar = false;\n\t\tthis.farSide.isFar = true;\n\t\tif (this.sides.length > 2) {\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\n\t\t}\n\n\t\tthis.resetToCurrentTurn();\n\t}\n\n\t//\n\t// activities\n\t//\n\tstart() {\n\t\tthis.log(['start']);\n\t\tthis.resetTurnsSinceMoved();\n\t}\n\twinner(winner?: string) {\n\t\tthis.log(['win', winner || '']);\n\t\tthis.ended = true;\n\t\tthis.subscription?.('ended');\n\t}\n\tprematureEnd() {\n\t\tthis.log(['message', 'This replay ends here.']);\n\t\tthis.ended = true;\n\t\tthis.subscription?.('ended');\n\t}\n\tendLastTurn() {\n\t\tif (this.endLastTurnPending) {\n\t\t\tthis.endLastTurnPending = false;\n\t\t\tthis.scene.updateStatbars();\n\t\t}\n\t}\n\tsetHardcoreMode(mode: boolean) {\n\t\tthis.hardcoreMode = mode;\n\t\tthis.scene.updateSidebars();\n\t\tthis.scene.updateWeather(true);\n\t}\n\tsetTurn(turnNum: number) {\n\t\tif (turnNum === this.turn + 1) {\n\t\t\tthis.endLastTurnPending = true;\n\t\t}\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\n\t\tthis.turn = turnNum;\n\t\tthis.started = true;\n\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\n\n\t\tthis.scene.incrementTurn();\n\n\t\tif (this.seeking !== null) {\n\t\t\tif (turnNum >= this.seeking) {\n\t\t\t\tthis.stopSeeking();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.subscription?.('turn');\n\t\t}\n\t}\n\tresetTurnsSinceMoved() {\n\t\tthis.turnsSinceMoved = 0;\n\t\tthis.scene.updateAcceleration();\n\t}\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\n\t\tlet weather = toID(weatherName);\n\t\tif (!weather || weather === 'none') {\n\t\t\tweather = '' as ID;\n\t\t}\n\t\tif (isUpkeep) {\n\t\t\tif (this.weather && this.weatherTimeLeft) {\n\t\t\t\tthis.weatherTimeLeft--;\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\n\t\t\t}\n\t\t\tif (this.seeking === null) {\n\t\t\t\tthis.scene.upkeepWeather();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (weather) {\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\n\t\t\tif (poke) {\n\t\t\t\tif (ability) {\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t\t}\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\n\t\t\t} else if (isExtremeWeather) {\n\t\t\t\tthis.weatherTimeLeft = 0;\n\t\t\t\tthis.weatherMinTimeLeft = 0;\n\t\t\t} else {\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\n\t\t\t}\n\t\t}\n\t\tthis.weather = weather;\n\t\tthis.scene.updateWeather();\n\t}\n\tswapSideConditions() {\n\t\tconst sideConditions = [\n\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\n\t\t];\n\t\tif (this.gameType === 'freeforall') {\n\t\t\t// TODO: Add FFA support\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet side1 = this.sides[0];\n\t\t\tlet side2 = this.sides[1];\n\t\t\tfor (const id of sideConditions) {\n\t\t\t\tif (side1.sideConditions[id] && side2.sideConditions[id]) {\n\t\t\t\t\t[side1.sideConditions[id], side2.sideConditions[id]] = [\n\t\t\t\t\t\tside2.sideConditions[id], side1.sideConditions[id],\n\t\t\t\t\t];\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\n\t\t\t\t} else if (side1.sideConditions[id] && !side2.sideConditions[id]) {\n\t\t\t\t\tside2.sideConditions[id] = side1.sideConditions[id];\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\n\t\t\t\t\tside1.removeSideCondition(id);\n\t\t\t\t} else if (side2.sideConditions[id] && !side1.sideConditions[id]) {\n\t\t\t\t\tside1.sideConditions[id] = side2.sideConditions[id];\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\n\t\t\t\t\tside2.removeSideCondition(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tupdateTurnCounters() {\n\t\tfor (const pWeather of this.pseudoWeather) {\n\t\t\tif (pWeather[1]) pWeather[1]--;\n\t\t\tif (pWeather[2]) pWeather[2]--;\n\t\t}\n\t\tfor (const side of this.sides) {\n\t\t\tfor (const id in side.sideConditions) {\n\t\t\t\tlet cond = side.sideConditions[id];\n\t\t\t\tif (cond[2]) cond[2]--;\n\t\t\t\tif (cond[3]) cond[3]--;\n\t\t\t}\n\t\t}\n\t\tfor (const poke of [...this.nearSide.active, ...this.farSide.active]) {\n\t\t\tif (poke) {\n\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\n\t\t\t\tpoke.clearTurnstatuses();\n\t\t\t}\n\t\t}\n\t\tthis.scene.updateWeather();\n\t}\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\tthis.activateAbility(pokemon, fromeffect);\n\t\tpokemon.clearMovestatuses();\n\t\tif (move.id === 'focuspunch') {\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\n\t\t}\n\t\tthis.scene.updateStatbar(pokemon);\n\t\tif (fromeffect.id === 'sleeptalk') {\n\t\t\tpokemon.rememberMove(move.name, 0);\n\t\t}\n\t\tlet callerMoveForPressure = null;\n\t\t// will not include effects that are conditions named after moves like Magic Coat and Snatch, which is good\n\t\tif (fromeffect.id && kwArgs.from.startsWith(\"move:\")) {\n\t\t\tcallerMoveForPressure = fromeffect as Move;\n\t\t}\n\t\tif (!fromeffect.id || callerMoveForPressure || fromeffect.id === 'pursuit') {\n\t\t\tlet moveName = move.name;\n\t\t\tif (!callerMoveForPressure) {\n\t\t\t\tif (move.isZ) {\n\t\t\t\t\tpokemon.item = move.isZ;\n\t\t\t\t\tlet item = Dex.items.get(move.isZ);\n\t\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\n\t\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\n\t\t\t\t\tmoveName = moveName.slice(2);\n\t\t\t\t\tmove = Dex.moves.get(moveName);\n\t\t\t\t\tif (window.BattleItems) {\n\t\t\t\t\t\tfor (let item in BattleItems) {\n\t\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet pp = 1;\n\t\t\tif (this.abilityActive('Pressure') && move.id !== 'stickyweb') {\n\t\t\t\tconst foeTargets = [];\n\t\t\t\tconst moveTarget = move.pressureTarget;\n\n\t\t\t\tif (\n\t\t\t\t\t!target && this.gameType === 'singles' &&\n\t\t\t\t\t!['self', 'allies', 'allySide', 'adjacentAlly', 'adjacentAllyOrSelf', 'allyTeam'].includes(moveTarget)\n\t\t\t\t) {\n\t\t\t\t\t// Hardcode for moves without a target in singles\n\t\t\t\t\tfoeTargets.push(pokemon.side.foe.active[0]);\n\t\t\t\t} else if (['all', 'allAdjacent', 'allAdjacentFoes', 'foeSide'].includes(moveTarget)) {\n\t\t\t\t\tfor (const active of this.getAllActive()) {\n\t\t\t\t\t\tif (active === pokemon) continue;\n\t\t\t\t\t\t// Pressure affects allies in gen 3 and 4\n\t\t\t\t\t\tif (this.gen <= 4 || (active.side !== pokemon.side && active.side.ally !== pokemon.side)) {\n\t\t\t\t\t\t\tfoeTargets.push(active);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (target && target.side !== pokemon.side) {\n\t\t\t\t\tfoeTargets.push(target);\n\t\t\t\t}\n\n\t\t\t\tfor (const foe of foeTargets) {\n\t\t\t\t\tif (foe && !foe.fainted && foe.effectiveAbility() === 'Pressure') {\n\t\t\t\t\t\tpp += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!callerMoveForPressure) {\n\t\t\t\tpokemon.rememberMove(moveName, pp);\n\t\t\t} else {\n\t\t\t\tpokemon.rememberMove(callerMoveForPressure.name, pp - 1); // 1 pp was already deducted from using the move itself\n\t\t\t}\n\t\t}\n\t\tpokemon.lastMove = move.id;\n\t\tthis.lastMove = move.id;\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\n\t\t\tpokemon.side.wisher = pokemon;\n\t\t}\n\t}\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\n\t\tif (this.seeking !== null || kwArgs.still) return;\n\n\t\tif (!target) target = pokemon.side.foe.active[0];\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\n\t\tif (kwArgs.miss && target.side) {\n\t\t\ttarget = target.side.missedPokemon;\n\t\t}\n\t\tif (kwArgs.notarget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\n\t\t\treturn;\n\t\t}\n\n\t\tlet usedMove = kwArgs.anim ? Dex.moves.get(kwArgs.anim) : move;\n\t\tif (!kwArgs.spread) {\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\n\t\t\treturn;\n\t\t}\n\n\t\tlet targets = [pokemon];\n\t\tif (kwArgs.spread === '.') {\n\t\t\t//  no target was hit by the attack\n\t\t\ttargets.push(target.side.missedPokemon);\n\t\t} else {\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\n\t\t\t\tif (!curTarget) {\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttargets.push(curTarget);\n\t\t\t}\n\t\t}\n\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\n\t}\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\n\t\tpokemon.clearMovestatuses();\n\t\tthis.scene.updateStatbar(pokemon);\n\t\tif (effect.id in BattleStatusAnims) {\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\n\t\t}\n\t\tthis.activateAbility(pokemon, effect);\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\n\t\tswitch (effect.id) {\n\t\tcase 'par':\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\n\t\t\tbreak;\n\t\tcase 'frz':\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\n\t\t\tbreak;\n\t\tcase 'slp':\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\n\t\t\tpokemon.statusData.sleepTurns++;\n\t\t\tbreak;\n\t\tcase 'truant':\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\n\t\t\tbreak;\n\t\tcase 'recharge':\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\n\t\t\tbreak;\n\t\tcase 'focuspunch':\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\n\t\t\tbreak;\n\t\tcase 'shelltrap':\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\n\t\t\tbreak;\n\t\tcase 'flinch':\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\n\t\t\tbreak;\n\t\tcase 'attract':\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\n\t\t\tbreak;\n\t\t}\n\t\tthis.scene.animReset(pokemon);\n\t}\n\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\n\t\tif (!pokemon || !effectOrName) return;\n\t\tif (typeof effectOrName !== 'string') {\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\n\t\t\teffectOrName = effectOrName.name;\n\t\t}\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\n\t}\n\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\n\t\tif (nextArgs && nextKwargs) {\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\n\t\t\t\targs[2] = 'ability: Sturdy';\n\t\t\t}\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\n\t\t\t)) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\n\t\t\t\tif (this.scene.closeMessagebar()) {\n\t\t\t\t\tthis.currentStep--;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tkwArgs.simult = '.';\n\t\t\t}\n\t\t}\n\t\tif (kwArgs.then) this.waitForAnimations = false;\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\n\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\n\t\tswitch (args[0]) {\n\t\tcase '-damage': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet damage = poke.healthParse(args[2], true);\n\t\t\tif (damage === null) break;\n\t\t\tlet range = poke.getDamageRange(damage);\n\n\t\t\tif (kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tthis.activateAbility(ofpoke, effect);\n\t\t\t\tif (effect.effectType === 'Item') {\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\n\t\t\t\t\t\titemPoke.item = effect.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'brn':\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'psn':\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'baddreams':\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'curse':\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'confusion':\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'leechseed':\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bind':\n\t\t\t\tcase 'wrap':\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.dex.moves.get(this.lastMove).category !== 'Status') {\n\t\t\t\t\tpoke.timesAttacked++;\n\t\t\t\t}\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\n\t\t\t\tif (damage[1] !== 100) {\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\n\t\t\t\t\t\thover += ' pixels';\n\t\t\t\t\t}\n\t\t\t\t\t// battle-log will convert this into <abbr>\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\n\t\t\t\t}\n\t\t\t\targs[3] = damageinfo;\n\t\t\t}\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-heal': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\n\t\t\tif (damage === null) break;\n\t\t\tlet range = poke.getDamageRange(damage);\n\n\t\t\tif (kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tthis.activateAbility(poke, effect);\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\n\t\t\t\t\t\tpoke.item = effect.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'lunardance':\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\n\t\t\t\t\t\ttrackedMove[1] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\tcase 'healingwish':\n\t\t\t\t\tthis.lastMove = 'healing-wish';\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\n\t\t\t\t\tpoke.side.wisher = null;\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wish':\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'revivalblessing':\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\n\t\t\t\t\tconst {siden} = this.parsePokemonId(args[1]);\n\t\t\t\t\tconst side = this.sides[siden];\n\t\t\t\t\tpoke.fainted = false;\n\t\t\t\t\tpoke.status = '';\n\t\t\t\t\tthis.scene.updateSidebar(side);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-sethp': {\n\t\t\tfor (let k = 0; k < 2; k++) {\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\n\t\t\t\tif (cpoke) {\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\n\t\t\t\t\tlet diff = damage[0];\n\t\t\t\t\tif (diff > 0) {\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-boost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet stat = args[2] as BoostStatName;\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\n\t\t\tlet amount = parseInt(args[3], 10);\n\t\t\tif (amount === 0) {\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\n\t\t\t\tthis.log(args, kwArgs);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!poke.boosts[stat]) {\n\t\t\t\tpoke.boosts[stat] = 0;\n\t\t\t}\n\t\t\tpoke.boosts[stat] += amount;\n\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-unboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet stat = args[2] as BoostStatName;\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\n\t\t\tlet amount = parseInt(args[3], 10);\n\t\t\tif (amount === 0) {\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\n\t\t\t\tthis.log(args, kwArgs);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!poke.boosts[stat]) {\n\t\t\t\tpoke.boosts[stat] = 0;\n\t\t\t}\n\t\t\tpoke.boosts[stat] -= amount;\n\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-setboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet stat = args[2] as BoostStatName;\n\t\t\tlet amount = parseInt(args[3], 10);\n\t\t\tpoke.boosts[stat] = amount;\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-swapboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\n\t\t\tfor (const stat of stats) {\n\t\t\t\tlet tmp = poke.boosts[stat];\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\n\t\t\t\tpoke2.boosts[stat] = tmp;\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearpositiveboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\n\t\t\tlet effect = Dex.getEffect(args[3]);\n\t\t\tfor (const stat in poke.boosts) {\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\n\n\t\t\tif (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'spectralthief':\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearnegativeboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tfor (const stat in poke.boosts) {\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-copyboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tthis.activateAbility(poke, effect);\n\t\t\t}\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\n\t\t\tfor (const stat of stats) {\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\n\t\t\t}\n\t\t\tif (this.gen >= 6) {\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'gmaxchistrike', 'laserfocus'];\n\t\t\t\tfor (const volatile of volatilesToCopy) {\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.boosts = {};\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-invertboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tfor (const stat in poke.boosts) {\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearallboost': {\n\t\t\tlet timeOffset = this.scene.timeOffset;\n\t\t\tfor (const active of this.getAllActive()) {\n\t\t\t\tactive.boosts = {};\n\t\t\t\tthis.scene.timeOffset = timeOffset;\n\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\n\t\t\t}\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-crit': {\n\t\t\tlet poke = this.getPokemon(args[1]);\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-supereffective': {\n\t\t\tlet poke = this.getPokemon(args[1]);\n\t\t\tif (poke) {\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\n\t\t\t\tif (window.Config?.server?.afd) {\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-resisted': {\n\t\t\tlet poke = this.getPokemon(args[1]);\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-immune': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\n\t\t\tbreak;\n\t\t}\n\t\tcase '-miss': {\n\t\t\tlet target = this.getPokemon(args[2]);\n\t\t\tif (target) {\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fail': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tif (fromeffect.id === 'clearamulet') {\n\t\t\t\tofpoke!.item = 'Clear Amulet';\n\t\t\t} else {\n\t\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\n\t\t\t}\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'brn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'tox':\n\t\t\tcase 'psn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'slp':\n\t\t\t\tif (fromeffect.id === 'uproar') {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\n\t\t\t\t} else {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'par':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'frz':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'unboost':\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (poke) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.scene.animReset(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-block': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'quickguard':\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'wideguard':\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'craftyshield':\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'protect':\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\n\t\t\t\tbreak;\n\n\t\t\tcase 'safetygoggles':\n\t\t\t\tpoke.item = 'Safety Goggles';\n\t\t\t\tbreak;\n\t\t\tcase 'protectivepads':\n\t\t\t\tpoke.item = 'Protective Pads';\n\t\t\t\tbreak;\n\t\t\tcase 'abilityshield':\n\t\t\t\tpoke.item = 'Ability Shield';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-center': case '-notarget': case '-ohko':\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-zpower': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-prepare': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet moveid = toID(args[2]);\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-mustrecharge': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-status': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\n\t\t\tpoke.status = args[2] as StatusName;\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\tif (effect.effectType === 'Item') {\n\t\t\t\tofpoke.item = effect.name;\n\t\t\t}\n\n\t\t\tswitch (args[2]) {\n\t\t\tcase 'brn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'tox':\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase 'psn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'slp':\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\n\t\t\t\tif (effect.id === 'rest') {\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'par':\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'frz':\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.scene.updateStatbar(poke);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-curestatus': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\n\t\t\tif (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'flamewheel':\n\t\t\t\tcase 'flareblitz':\n\t\t\t\tcase 'fusionflare':\n\t\t\t\tcase 'sacredfire':\n\t\t\t\tcase 'scald':\n\t\t\t\tcase 'steameruption':\n\t\t\t\t\tkwArgs.thaw = '.';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (poke) {\n\t\t\t\tpoke.status = '';\n\t\t\t\tswitch (args[2]) {\n\t\t\t\tcase 'brn':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tox':\n\t\t\t\tcase 'psn':\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'slp':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'par':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'frz':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\n\t\t}\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tfor (const target of poke.side.pokemon) {\n\t\t\t\ttarget.status = '';\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\n\t\t\t}\n\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-item': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet item = Dex.items.get(args[2]);\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tpoke.item = item.name;\n\t\t\tpoke.itemEffect = '';\n\t\t\tpoke.removeVolatile('airballoon' as ID);\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\n\n\t\t\tif (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'pickup':\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\n\t\t\t\t\t// falls through\n\t\t\t\tcase 'recycle':\n\t\t\t\t\tpoke.itemEffect = 'found';\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'frisk':\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'magician':\n\t\t\t\tcase 'pickpocket':\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\n\t\t\t\t\t// falls through\n\t\t\t\tcase 'thief':\n\t\t\t\tcase 'covet':\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\n\t\t\t\t\tofpoke!.item = '';\n\t\t\t\t\tofpoke!.itemEffect = '';\n\t\t\t\t\tofpoke!.prevItem = item.name;\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\n\t\t\t\t\tpoke.itemEffect = 'stolen';\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'harvest':\n\t\t\t\t\tpoke.itemEffect = 'harvested';\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bestow':\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'switcheroo':\n\t\t\t\tcase 'trick':\n\t\t\t\t\tpoke.itemEffect = 'tricked';\n\t\t\t\t\t// falls through\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tswitch (item.id) {\n\t\t\t\tcase 'airballoon':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-enditem': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet item = Dex.items.get(args[2]);\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tif (this.gen > 4 || effect.id !== 'knockoff') {\n\t\t\t\tpoke.item = '';\n\t\t\t\tpoke.itemEffect = '';\n\t\t\t\tpoke.prevItem = item.name;\n\t\t\t\tpoke.prevItemEffect = '';\n\t\t\t}\n\t\t\tpoke.removeVolatile('airballoon' as ID);\n\t\t\tpoke.addVolatile('itemremoved' as ID);\n\t\t\tif (kwArgs.eat) {\n\t\t\t\tpoke.prevItemEffect = 'eaten';\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\n\t\t\t\tthis.lastMove = item.id;\n\t\t\t} else if (kwArgs.weaken) {\n\t\t\t\tpoke.prevItemEffect = 'eaten';\n\t\t\t\tthis.lastMove = item.id;\n\t\t\t} else if (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'fling':\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'knockoff':\n\t\t\t\t\tif (this.gen <= 4) {\n\t\t\t\t\t\tpoke.itemEffect = 'knocked off';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\n\t\t\t\t\t}\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stealeat':\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gem':\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'incinerate':\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tswitch (item.id) {\n\t\t\t\tcase 'airballoon':\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'focussash':\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'focusband':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'redcard':\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-ability': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ability = Dex.abilities.get(args[2]);\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\n\n\t\t\tif (kwArgs.silent) {\n\t\t\t\t// do nothing\n\t\t\t} else if (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'trace':\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\n\t\t\t\t\tthis.scene.wait(500);\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'powerofalchemy':\n\t\t\t\tcase 'receiver':\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\n\t\t\t\t\tthis.scene.wait(500);\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roleplay':\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'desolateland':\n\t\t\t\tcase 'primordialsea':\n\t\t\t\tcase 'deltastream':\n\t\t\t\t\tif (kwArgs.fail) {\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t}\n\t\t\tthis.scene.updateWeather();\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-endability': {\n\t\t\t// deprecated; use |-start| for Gastro Acid\n\t\t\t// and the third arg of |-ability| for Entrainment et al\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ability = Dex.abilities.get(args[2]);\n\t\t\tpoke.ability = '(suppressed)';\n\n\t\t\tif (ability.id) {\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'detailschange': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.removeVolatile('formechange' as ID);\n\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\tpoke.removeVolatile('typechange' as ID);\n\n\t\t\tlet newSpeciesForme = args[2];\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\n\t\t\tif (commaIndex !== -1) {\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\n\t\t\t\tif (level.charAt(0) === 'L') {\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\n\t\t\t\t}\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\n\t\t\t}\n\t\t\tlet species = this.dex.species.get(newSpeciesForme);\n\t\t\tif (nextArgs) {\n\t\t\t\tif (nextArgs[0] === '-mega') {\n\t\t\t\t\tspecies = this.dex.species.get(this.dex.items.get(nextArgs[3]).megaStone);\n\t\t\t\t} else if (nextArgs[0] === '-primal' && nextArgs.length > 2) {\n\t\t\t\t\tif (nextArgs[2] === 'Red Orb') species = this.dex.species.get('Groudon-Primal');\n\t\t\t\t\tif (nextArgs[2] === 'Blue Orb') species = this.dex.species.get('Kyogre-Primal');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpoke.speciesForme = newSpeciesForme;\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\n\n\t\t\tpoke.details = args[2];\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\n\n\t\t\tlet isCustomAnim = species.id !== 'palafinhero';\n\t\t\tthis.scene.animTransform(poke, isCustomAnim, true);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-transform': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\n\n\t\t\tif (!kwArgs.silent) {\n\t\t\t\tthis.activateAbility(poke, effect);\n\t\t\t}\n\n\t\t\tpoke.boosts = {...tpoke.boosts};\n\t\t\tpoke.copyTypesFrom(tpoke, true);\n\t\t\tpoke.ability = tpoke.ability;\n\t\t\tpoke.timesAttacked = tpoke.timesAttacked;\n\t\t\tconst targetForme = tpoke.volatiles.formechange;\n\t\t\tconst speciesForme = (targetForme && !targetForme[1].endsWith('-Gmax')) ? targetForme[1] : tpoke.speciesForme;\n\t\t\tconst pokemon = tpoke;\n\t\t\tconst shiny = tpoke.shiny;\n\t\t\tconst gender = tpoke.gender;\n\t\t\tconst level = tpoke.level;\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender, level);\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\n\t\t\t}\n\t\t\tthis.scene.animTransform(poke);\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-formechange': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet species = Dex.species.get(args[2]);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tlet isCustomAnim = species.name.startsWith('Wishiwashi');\n\t\t\tif (!poke.getSpeciesForme().endsWith('-Gmax') && !species.name.endsWith('-Gmax')) {\n\t\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\t\tpoke.removeVolatile('typechange' as ID);\n\t\t\t\tif (this.gen >= 6) poke.removeVolatile('autotomize' as ID);\n\t\t\t}\n\n\t\t\tif (!kwArgs.silent) {\n\t\t\t\tthis.activateAbility(poke, fromeffect);\n\t\t\t}\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-mega': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet item = Dex.items.get(args[3]);\n\t\t\tif (args[3]) {\n\t\t\t\tpoke.item = item.name;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-primal': case '-burst': {\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-terastallize': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet type = Dex.types.get(args[2]).name;\n\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\tpoke.terastallized = type;\n\t\t\tpoke.details += `, tera:${type}`;\n\t\t\tpoke.searchid += `, tera:${type}`;\n\t\t\tthis.scene.animTransform(poke, true);\n\t\t\tthis.scene.resetStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-start': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\n\t\t\tthis.activateAbility(poke, effect);\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'typechange':\n\t\t\t\tif (poke.terastallized) break;\n\t\t\t\tif (ofpoke && fromeffect.id === 'reflecttype') {\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\n\t\t\t\t} else {\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\n\t\t\t\t\tif (!kwArgs.silent) {\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.scene.updateStatbar(poke);\n\t\t\t\tbreak;\n\t\t\tcase 'typeadd':\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\n\t\t\t\tif (kwArgs.silent) break;\n\t\t\t\tthis.scene.typeAnim(poke, type);\n\t\t\t\tbreak;\n\t\t\tcase 'dynamax':\n\t\t\t\tpoke.addVolatile('dynamax' as ID, !!args[3]);\n\t\t\t\tthis.scene.animTransform(poke, true);\n\t\t\t\tbreak;\n\t\t\tcase 'powertrick':\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'foresight':\n\t\t\tcase 'miracleeye':\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'telekinesis':\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'confusion':\n\t\t\t\tif (!kwArgs.already) {\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'leechseed':\n\t\t\t\tthis.scene.updateStatbar(poke);\n\t\t\t\tbreak;\n\t\t\tcase 'healblock':\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'yawn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\n\t\t\t\tbreak;\n\t\t\tcase 'taunt':\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'imprison':\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'disable':\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'embargo':\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'torment':\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'ingrain':\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'aquaring':\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'stockpile1':\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'stockpile2':\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'stockpile3':\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'perish0':\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\n\t\t\t\tbreak;\n\t\t\tcase 'perish1':\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'perish2':\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'perish3':\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'encore':\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'bide':\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'attract':\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'autotomize':\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\n\t\t\t\tif (poke.volatiles.autotomize) {\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\n\t\t\t\t} else {\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'focusenergy':\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'curse':\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'nightmare':\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'magnetrise':\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'smackdown':\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\n\t\t\t\tbreak;\n\t\t\tcase 'substitute':\n\t\t\t\tif (kwArgs.damage) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\n\t\t\t\t} else if (kwArgs.block) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Gen 1-2\n\t\t\tcase 'mist':\n\t\t\t\tthis.scene.resultAnim(poke, 'Mist', 'good');\n\t\t\t\tbreak;\n\t\t\t// Gen 1\n\t\t\tcase 'lightscreen':\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'reflect':\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!(effect.id === 'typechange' && poke.terastallized)) {\n\t\t\t\tpoke.addVolatile(effect.id);\n\t\t\t}\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-end': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tpoke.removeVolatile(effect.id);\n\n\t\t\tif (kwArgs.silent) {\n\t\t\t\t// do nothing\n\t\t\t} else {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'dynamax':\n\t\t\t\t\tthis.scene.animTransform(poke);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'powertrick':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'telekinesis':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skydrop':\n\t\t\t\t\tif (kwArgs.interrupt) {\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'confusion':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'leechseed':\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'healblock':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'attract':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'taunt':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'disable':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'embargo':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'torment':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'encore':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bide':\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'illusion':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\n\t\t\t\t\tpoke.rememberAbility('Illusion');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'slowstart':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'perishsong': // for backwards compatibility\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'substitute':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stockpile':\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'protosynthesis':\n\t\t\t\t\tpoke.removeVolatile('protosynthesisatk' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisdef' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspa' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspd' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspe' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'quarkdrive':\n\t\t\t\t\tpoke.removeVolatile('quarkdriveatk' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivedef' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespa' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespd' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespe' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (effect.effectType === 'Move') {\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-singleturn': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoke.addTurnstatus(effect.id);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'roost':\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'quickguard':\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'wideguard':\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'craftyshield':\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'matblock':\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'protect':\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'endure':\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'helpinghand':\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'focuspunch':\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\n\t\t\t\tpoke.rememberMove(effect.name, 0);\n\t\t\t\tbreak;\n\t\t\tcase 'shelltrap':\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\n\t\t\t\tpoke.rememberMove(effect.name, 0);\n\t\t\t\tbreak;\n\t\t\tcase 'beakblast':\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-singlemove': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tpoke.addMovestatus(effect.id);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'grudge':\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'destinybond':\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-activate': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet target = this.getPokemon(args[3]);\n\t\t\tthis.activateAbility(poke, effect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'poltergeist':\n\t\t\t\tpoke.item = kwArgs.item;\n\t\t\t\tpoke.itemEffect = 'disturbed';\n\t\t\t\tbreak;\n\t\t\tcase 'grudge':\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\n\t\t\t\tbreak;\n\t\t\tcase 'substitute':\n\t\t\t\tif (kwArgs.damage) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\n\t\t\t\t} else if (kwArgs.block) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'attract':\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'bide':\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\n\t\t\t\tbreak;\n\n\t\t\t// move activations\n\t\t\tcase 'aromatherapy':\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'healbell':\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'brickbreak':\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\n\t\t\t\tbreak;\n\t\t\tcase 'hyperdrill':\n\t\t\tcase 'hyperspacefury':\n\t\t\tcase 'hyperspacehole':\n\t\t\tcase 'phantomforce':\n\t\t\tcase 'shadowforce':\n\t\t\tcase 'feint':\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'eeriespell':\n\t\t\tcase 'gmaxdepletion':\n\t\t\tcase 'spite':\n\t\t\t\tlet move = Dex.moves.get(kwArgs.move).name;\n\t\t\t\tlet pp = Number(kwArgs.number);\n\t\t\t\tif (isNaN(pp)) pp = 4;\n\t\t\t\tpoke.rememberMove(move, pp);\n\t\t\t\tbreak;\n\t\t\tcase 'gravity':\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\n\t\t\t\tthis.scene.anim(poke, {time: 100});\n\t\t\t\tbreak;\n\t\t\tcase 'skillswap': case 'wanderingspirit':\n\t\t\t\tif (this.gen <= 4) break;\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\n\t\t\t\tif (pokeability) {\n\t\t\t\t\tpoke.ability = pokeability;\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\n\t\t\t\t}\n\t\t\t\tif (targetability) {\n\t\t\t\t\ttarget!.ability = targetability;\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\n\t\t\t\t}\n\t\t\t\tif (poke.side !== target!.side) {\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// ability activations\n\t\t\tcase 'electromorphosis':\n\t\t\tcase 'windpower':\n\t\t\t\tpoke.addMovestatus('charge' as ID);\n\t\t\t\tbreak;\n\t\t\tcase 'forewarn':\n\t\t\t\tif (target) {\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\n\t\t\t\t} else {\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\n\t\t\t\t\t}\n\t\t\t\t\tif (foeActive.length === 1) {\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'lingeringaroma':\n\t\t\tcase 'mummy':\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\n\t\t\t\tlet ability = Dex.abilities.get(kwArgs.ability);\n\t\t\t\tthis.activateAbility(target, ability.name);\n\t\t\t\tthis.activateAbility(poke, effect.name);\n\t\t\t\tthis.scene.wait(700);\n\t\t\t\tthis.activateAbility(target, effect.name, true);\n\t\t\t\tbreak;\n\n\t\t\t// item activations\n\t\t\tcase 'leppaberry':\n\t\t\tcase 'mysteryberry':\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\n\t\t\t\tbreak;\n\t\t\tcase 'focusband':\n\t\t\t\tpoke.item = 'Focus Band';\n\t\t\t\tbreak;\n\t\t\tcase 'quickclaw':\n\t\t\t\tpoke.item = 'Quick Claw';\n\t\t\t\tbreak;\n\t\t\tcase 'abilityshield':\n\t\t\t\tpoke.item = 'Ability Shield';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-sidestart': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tside.addSideCondition(effect, !!kwArgs.persistent);\n\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'tailwind':\n\t\t\tcase 'auroraveil':\n\t\t\tcase 'reflect':\n\t\t\tcase 'lightscreen':\n\t\t\tcase 'safeguard':\n\t\t\tcase 'mist':\n\t\t\tcase 'gmaxwildfire':\n\t\t\tcase 'gmaxvolcalith':\n\t\t\tcase 'gmaxvinelash':\n\t\t\tcase 'gmaxcannonade':\n\t\t\tcase 'grasspledge':\n\t\t\tcase 'firepledge':\n\t\t\tcase 'waterpledge':\n\t\t\t\tthis.scene.updateWeather();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-sideend': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tside.removeSideCondition(effect.name);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-swapsideconditions': {\n\t\t\tthis.swapSideConditions();\n\t\t\tthis.scene.updateWeather();\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-weather': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\n\t\t\tif (!effect.id || effect.id === 'none') {\n\t\t\t\tkwArgs.from = this.weather;\n\t\t\t}\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fieldstart': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tthis.activateAbility(poke, fromeffect);\n\t\t\tlet minTimeLeft = 5;\n\t\t\tlet maxTimeLeft = 0;\n\t\t\tif (effect.id.endsWith('terrain')) {\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\n\t\t\t}\n\t\t\tif (kwArgs.persistent) minTimeLeft += 2;\n\t\t\tthis.addPseudoWeather(effect.name, minTimeLeft, maxTimeLeft);\n\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'gravity':\n\t\t\t\tif (this.seeking !== null) break;\n\t\t\t\tfor (const active of this.getAllActive()) {\n\t\t\t\t\tthis.scene.runOtherAnim('gravity' as ID, [active]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fieldend': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\n\t\t\tthis.removePseudoWeather(effect.name);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fieldactivate': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'perishsong':\n\t\t\t\tthis.scene.updateStatbars();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-anim': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet move = Dex.moves.get(args[2]);\n\t\t\tif (this.checkActive(poke)) return;\n\t\t\tlet poke2 = this.getPokemon(args[3]);\n\t\t\tthis.scene.beforeMove(poke);\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\n\t\t\tthis.scene.afterMove(poke);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-hint': case '-message': case '-candynamax': {\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\n\t\t\tbreak;\n\t\t}}\n\t}\n\t/*\n\tparseSpriteData(name) {\n\t\tlet siden = 0,\n\t\t\tfoe = false;\n\t\twhile (true) {\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\n\t\t\t\tfoe = true;\n\t\t\t\tname = name.substr(6);\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\n\t\t\t\tsiden = this.p2.n;\n\t\t\t\tname = name.substr(4);\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\n\t\t\t\tsiden = this.p1.n;\n\t\t\t\tname = name.substr(5);\n\t\t\t} else break;\n\t\t}\n\t\tif (name.substr(name.length - 1) === ')') {\n\t\t\tlet parenIndex = name.lastIndexOf('(');\n\t\t\tif (parenIndex > 0) {\n\t\t\t\tlet species = name.substr(parenIndex + 1);\n\t\t\t\tname = species.substr(0, species.length - 1);\n\t\t\t}\n\t\t}\n\t\tif (foe) siden = (siden ? 0 : 1);\n\n\t\tlet data = Dex.species.get(name);\n\t\treturn data.spriteData[siden];\n\t}\n\t*/\n\t/**\n\t * @param name Leave blank for Team Preview\n\t * @param pokemonid Leave blank for Team Preview\n\t * @param details\n\t * @param output\n\t */\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\n\t\tconst isTeamPreview = !name;\n\t\toutput.details = details;\n\t\toutput.name = name;\n\t\toutput.speciesForme = name;\n\t\toutput.level = 100;\n\t\toutput.shiny = false;\n\t\toutput.gender = '';\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\n\t\tlet splitDetails = details.split(', ');\n\t\tif (splitDetails[splitDetails.length - 1].startsWith('tera:')) {\n\t\t\toutput.terastallized = splitDetails[splitDetails.length - 1].slice(5);\n\t\t\tsplitDetails.pop();\n\t\t}\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\n\t\t\toutput.shiny = true;\n\t\t\tsplitDetails.pop();\n\t\t}\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\n\t\t\tsplitDetails.pop();\n\t\t}\n\t\tif (splitDetails[1]) {\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\n\t\t}\n\t\tif (splitDetails[0]) {\n\t\t\toutput.speciesForme = splitDetails[0];\n\t\t}\n\t\treturn output;\n\t}\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\n\t\tlet [hp, status] = hpstring.split(' ');\n\n\t\t// hp parse\n\t\toutput.hpcolor = '';\n\t\tif (hp === '0' || hp === '0.0') {\n\t\t\tif (!output.maxhp) output.maxhp = 100;\n\t\t\toutput.hp = 0;\n\t\t} else if (hp.indexOf('/') > 0) {\n\t\t\tlet [curhp, maxhp] = hp.split('/');\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toutput.hp = parseFloat(curhp);\n\t\t\toutput.maxhp = parseFloat(maxhp);\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\n\t\t\tconst colorchar = maxhp.slice(-1);\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\n\t\t\t\toutput.hpcolor = colorchar;\n\t\t\t}\n\t\t} else if (!isNaN(parseFloat(hp))) {\n\t\t\tif (!output.maxhp) output.maxhp = 100;\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\n\t\t}\n\n\t\t// status parse\n\t\tif (!status) {\n\t\t\toutput.status = '';\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\n\t\t\toutput.status = status;\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\n\t\t\toutput.status = status;\n\t\t} else if (status === 'fnt') {\n\t\t\toutput.hp = 0;\n\t\t\toutput.fainted = true;\n\t\t}\n\t\treturn output;\n\t}\n\tparsePokemonId(pokemonid: string) {\n\t\tlet name = pokemonid;\n\n\t\tlet siden = -1;\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\n\t\tif (/^p[1-9]($|: )/.test(name)) {\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\n\t\t\tname = name.slice(4);\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\n\t\t\tslot = slotChart[name.charAt(2)];\n\t\t\tname = name.slice(5);\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\n\t\t}\n\t\treturn {name, siden, slot, pokemonid};\n\t}\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\n\t\tpokemonid = parsedPokemonid;\n\n\t\tconst searchid = `${pokemonid}|${details}`;\n\t\tconst side = this.sides[siden];\n\n\t\t// search inactive revealed pokemon\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\n\t\t\tlet pokemon = side.pokemon[i];\n\t\t\tif (pokemon.fainted) continue;\n\t\t\t// already active, can't be switching in\n\t\t\tif (side.active.includes(pokemon)) continue;\n\t\t\t// just switched out, can't be switching in\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\n\n\t\t\tif (pokemon.searchid === searchid) {\n\t\t\t\t// exact match\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\n\t\t\t\t// switch-in matches Team Preview entry\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t}\n\n\t\t// pokemon not found, create a new pokemon object for it\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\n\t\tif (slot >= 0) pokemon.slot = slot;\n\t\treturn pokemon;\n\t}\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\n\t\tconst {siden} = this.parsePokemonId(sideid);\n\n\t\treturn this.sides[siden].addPokemon('', '', details);\n\t}\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\n\t\t\tif (pokemon.searchid === searchid) {\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tgetPokemon(pokemonid: string | undefined) {\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\n\t\t\treturn null;\n\t\t}\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\n\t\tpokemonid = parsedPokemonid;\n\n\t\t/** if true, don't match an active pokemon */\n\t\tconst isInactive = (slot < 0);\n\t\tconst side = this.sides[siden];\n\n\t\t// search player's pokemon\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\n\n\t\tfor (const pokemon of side.pokemon) {\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\tgetSide(sidename: string): Side {\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\n\t\tif (this.farSide.id === sidename) return this.farSide;\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\n\t\tif (this.farSide.name === sidename) return this.farSide;\n\t\treturn {\n\t\t\tname: sidename,\n\t\t\tid: sidename.replace(/ /g, ''),\n\t\t} as any;\n\t}\n\n\tadd(command?: string) {\n\t\tif (command) this.stepQueue.push(command);\n\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\n\t\t\tthis.atQueueEnd = false;\n\t\t\tthis.nextStep();\n\t\t}\n\t}\n\t/**\n\t * PS's preempt system is intended to show chat messages immediately,\n\t * instead of waiting for the battle to get to the point where the\n\t * message was said.\n\t *\n\t * In addition to being a nice quality-of-life feature, it's also\n\t * important to make sure timer updates happen in real-time.\n\t */\n\tinstantAdd(command: string) {\n\t\tthis.run(command, true);\n\t\tthis.preemptStepQueue.push(command);\n\t\tthis.add(command);\n\t}\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\n\t\tswitch (args[0]) {\n\t\tcase 'start': {\n\t\t\tthis.nearSide.active[0] = null;\n\t\t\tthis.farSide.active[0] = null;\n\t\t\tthis.scene.resetSides();\n\t\t\tthis.start();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'upkeep': {\n\t\t\tthis.usesUpkeep = true;\n\t\t\tthis.updateTurnCounters();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'turn': {\n\t\t\tthis.setTurn(parseInt(args[1], 10));\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'tier': {\n\t\t\tthis.tier = args[1];\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\n\t\t\t\tthis.speciesClause = true;\n\t\t\t}\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\n\t\t\t\tthis.messageFadeTime = 40;\n\t\t\t\tthis.isBlitz = true;\n\t\t\t}\n\t\t\tif (this.tier.includes(`Let's Go`)) {\n\t\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\n\t\t\t}\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'gametype': {\n\t\t\tthis.gameType = args[1] as any;\n\t\t\tswitch (args[1]) {\n\t\t\tcase 'multi':\n\t\t\tcase 'freeforall':\n\t\t\t\tthis.pokemonControlled = 1;\n\t\t\t\tif (!this.p3) this.p3 = new Side(this, 2);\n\t\t\t\tif (!this.p4) this.p4 = new Side(this, 3);\n\t\t\t\tthis.p3.foe = this.p2;\n\t\t\t\tthis.p4.foe = this.p1;\n\n\t\t\t\tif (args[1] === 'multi') {\n\t\t\t\t\tthis.p4.ally = this.p2;\n\t\t\t\t\tthis.p3.ally = this.p1;\n\t\t\t\t\tthis.p1.ally = this.p3;\n\t\t\t\t\tthis.p2.ally = this.p4;\n\t\t\t\t}\n\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\n\t\t\t\tbreak;\n\t\t\tcase 'doubles':\n\t\t\t\tthis.nearSide.active = [null, null];\n\t\t\t\tthis.farSide.active = [null, null];\n\t\t\t\tbreak;\n\t\t\tcase 'triples':\n\t\t\tcase 'rotation':\n\t\t\t\tthis.nearSide.active = [null, null, null];\n\t\t\t\tthis.farSide.active = [null, null, null];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfor (const side of this.sides) side.active = [null];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\n\t\t\tthis.scene.updateGen();\n\t\t\tthis.scene.resetSides();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'rule': {\n\t\t\tlet ruleName = args[1].split(': ')[0];\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\n\t\t\tif (ruleName === 'Blitz') {\n\t\t\t\tthis.messageFadeTime = 40;\n\t\t\t\tthis.isBlitz = true;\n\t\t\t}\n\t\t\tthis.rules[ruleName] = 1;\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'rated': {\n\t\t\tthis.rated = args[1] || true;\n\t\t\tthis.scene.updateGen();\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'inactive': {\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\n\t\t\t\treturn;\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\n\t\t\t\t// this is ugly but parseInt is documented to work this way\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\n\t\t\t\t// sentence\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\n\t\t\t\treturn;\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\n\t\t\t\tlet userid = window.app?.user?.get('userid');\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\n\t\t\t\t}\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\n\t\t\t\tif (this.isBlitz) return;\n\t\t\t}\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'inactiveoff': {\n\t\t\tthis.kickingInactive = false;\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'join': case 'j': case 'J': {\n\t\t\tif (this.roomid) {\n\t\t\t\tlet room = app!.rooms[this.roomid];\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\n\t\t\t\tlet userid = toUserid(user.name);\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\n\t\t\t\troom.users[userid] = user;\n\t\t\t\troom.userList.add(userid);\n\t\t\t\troom.userList.updateUserCount();\n\t\t\t\troom.userList.updateNoUsersOnline();\n\t\t\t}\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'leave': case 'l': case 'L': {\n\t\t\tif (this.roomid) {\n\t\t\t\tlet room = app!.rooms[this.roomid];\n\t\t\t\tlet user = args[1];\n\t\t\t\tlet userid = toUserid(user);\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\n\t\t\t\tdelete room.users[userid];\n\t\t\t\troom.userList.remove(userid);\n\t\t\t\troom.userList.updateUserCount();\n\t\t\t\troom.userList.updateNoUsersOnline();\n\t\t\t}\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'name': case 'n': case 'N': {\n\t\t\tif (this.roomid) {\n\t\t\t\tlet room = app!.rooms[this.roomid];\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\n\t\t\t\tlet oldid = args[2];\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\n\t\t\t\t\tapp!.user.set({\n\t\t\t\t\t\taway: user.away,\n\t\t\t\t\t\tstatus: user.status,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tlet userid = toUserid(user.name);\n\t\t\t\troom.users[userid] = user;\n\t\t\t\troom.userList.remove(oldid);\n\t\t\t\troom.userList.add(userid);\n\t\t\t}\n\t\t\tif (!this.ignoreSpects) {\n\t\t\t\tthis.log(args, undefined, preempt);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'player': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tside.setName(args[2]);\n\t\t\tif (args[3]) side.setAvatar(args[3]);\n\t\t\tif (args[4]) side.rating = args[4];\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\n\t\t\tthis.log(args);\n\t\t\tthis.scene.updateSidebar(side);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'teamsize': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\n\t\t\tthis.scene.updateSidebar(side);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'win': case 'tie': {\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'prematureend': {\n\t\t\tthis.prematureEnd();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'clearpoke': {\n\t\t\tthis.p1.clearPokemon();\n\t\t\tthis.p2.clearPokemon();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'poke': {\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\n\t\t\tif (args[3] === 'mail') {\n\t\t\t\tpokemon.item = '(mail)';\n\t\t\t} else if (args[3] === 'item') {\n\t\t\t\tpokemon.item = '(exists)';\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'updatepoke': {\n\t\t\tconst {siden} = this.parsePokemonId(args[1]);\n\t\t\tconst side = this.sides[siden];\n\t\t\tfor (let i = 0; i < side.pokemon.length; i++) {\n\t\t\t\tconst pokemon = side.pokemon[i];\n\t\t\t\tif (pokemon.details !== args[2] && pokemon.checkDetails(args[2])) {\n\t\t\t\t\tside.addPokemon('', '', args[2], i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'teampreview': {\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\n\t\t\tthis.scene.teamPreview();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'switch': case 'drag': case 'replace': {\n\t\t\tthis.endLastTurn();\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\n\t\t\tlet slot = poke.slot;\n\t\t\tpoke.healthParse(args[3]);\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\n\t\t\tpoke.terastallized = args[2].match(/tera:([a-z]+)$/i)?.[1] || '';\n\t\t\tif (args[0] === 'switch') {\n\t\t\t\tif (poke.side.active[slot]) {\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!, kwArgs);\n\t\t\t\t}\n\t\t\t\tpoke.side.switchIn(poke, kwArgs);\n\t\t\t} else if (args[0] === 'replace') {\n\t\t\t\tpoke.side.replace(poke);\n\t\t\t} else {\n\t\t\t\tpoke.side.dragIn(poke);\n\t\t\t}\n\t\t\tthis.scene.updateWeather();\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'faint': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.side.faint(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'swap': {\n\t\t\tif (isNaN(Number(args[2]))) {\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\n\t\t\t} else {\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\n\t\t\t\tif (kwArgs.from) {\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\n\t\t\t\t\tif (target) args[2] = target.ident;\n\t\t\t\t}\n\t\t\t\tpoke.side.swapTo(poke, targetIndex);\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'move': {\n\t\t\tthis.endLastTurn();\n\t\t\tthis.resetTurnsSinceMoved();\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet move = Dex.moves.get(args[2]);\n\t\t\tif (this.checkActive(poke)) return;\n\t\t\tlet poke2 = this.getPokemon(args[3]);\n\t\t\tthis.scene.beforeMove(poke);\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tthis.scene.afterMove(poke);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'cant': {\n\t\t\tthis.endLastTurn();\n\t\t\tthis.resetTurnsSinceMoved();\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet move = Dex.moves.get(args[3]);\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'gen': {\n\t\t\tthis.gen = parseInt(args[1], 10);\n\t\t\tthis.dex = Dex.forGen(this.gen);\n\t\t\tthis.scene.updateGen();\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'callback': {\n\t\t\tthis.subscription?.('callback');\n\t\t\tbreak;\n\t\t}\n\t\tcase 'fieldhtml': {\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\n\t\t\tbreak;\n\t\t}\n\t\tcase 'controlshtml': {\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthis.log(args, kwArgs, preempt);\n\t\t\tbreak;\n\t\t}}\n\t}\n\n\trun(str: string, preempt?: boolean) {\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\n\t\t\tthis.preemptStepQueue.shift();\n\t\t\tthis.scene.preemptCatchup();\n\t\t\treturn;\n\t\t}\n\t\tif (!str) return;\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\n\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\n\t\t\tthis.currentStep--;\n\t\t\tthis.activeMoveIsSpread = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\n\t\tlet nextArgs: Args = [''];\n\t\tlet nextKwargs: KWArgs = {};\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\n\t\tif (nextLine.slice(0, 2) === '|-') {\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\n\t\t}\n\n\t\tif (this.debug) {\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\n\t\t\t} else {\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\n\t\t\t\t} else {\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\n\t\t\t\t}\n\t\t\t} catch (err: any) {\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\n\t\t\t\tif (err.stack) {\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\n\t\t\t\t\tfor (const line of stack) {\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.log(['error', line]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.subscription?.('error');\n\t\t\t}\n\t\t}\n\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\n\t\t\tif (this.turn === -1) {\n\t\t\t\tthis.turn = 0;\n\t\t\t\tthis.scene.updateBgm();\n\t\t\t}\n\t\t}\n\t}\n\tcheckActive(poke: Pokemon) {\n\t\tif (!poke.side.active[poke.slot]) {\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\n\t\t\tpoke.side.replace(poke);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t\tthis.scene.pause();\n\t\tthis.subscription?.('paused');\n\t}\n\t/**\n\t * Properties relevant to battle playback, for replay UI implementers:\n\t * - `ended`: has the game ended in a win/loss?\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\n\t * - `seeking`: are we trying to skip to a specific turn\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\n\t * - `paused`: are we playing at all?\n\t */\n\tplay() {\n\t\tthis.paused = false;\n\t\tthis.started = true;\n\t\tthis.scene.resume();\n\t\tthis.nextStep();\n\t\tthis.subscription?.('playing');\n\t}\n\tskipTurn() {\n\t\tthis.seekBy(1);\n\t}\n\tseekBy(deltaTurn: number) {\n\t\tif (this.seeking === Infinity && deltaTurn < 0) {\n\t\t\treturn this.seekTurn(this.turn + 1);\n\t\t}\n\t\tthis.seekTurn((this.seeking ?? this.turn) + deltaTurn);\n\t}\n\tseekTurn(turn: number, forceReset?: boolean) {\n\t\tif (isNaN(turn)) return;\n\t\tturn = Math.max(Math.floor(turn), 0);\n\n\t\tif (this.seeking !== null && turn > this.turn && !forceReset) {\n\t\t\tthis.seeking = turn;\n\t\t\treturn;\n\t\t}\n\n\t\tif (turn === 0) {\n\t\t\tthis.seeking = null;\n\t\t\tthis.resetStep();\n\t\t\tthis.scene.animationOn();\n\t\t\tif (this.paused) this.subscription?.('paused');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.seeking = turn;\n\n\t\tif (turn <= this.turn || forceReset) {\n\t\t\tthis.scene.animationOff();\n\t\t\tthis.resetStep();\n\t\t} else if (this.atQueueEnd) {\n\t\t\tthis.scene.animationOn();\n\t\t\tthis.seeking = null;\n\t\t} else {\n\t\t\tthis.scene.animationOff();\n\t\t\tthis.nextStep();\n\t\t}\n\t}\n\tstopSeeking() {\n\t\tthis.seeking = null;\n\t\tthis.scene.animationOn();\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\n\t}\n\tshouldStep() {\n\t\tif (this.atQueueEnd) return false;\n\t\tif (this.seeking !== null) return true;\n\t\treturn !(this.paused && this.turn >= 0);\n\t}\n\tnextStep() {\n\t\tif (!this.shouldStep()) return;\n\n\t\tlet time = Date.now();\n\t\tthis.scene.startAnimations();\n\t\tlet animations = undefined;\n\n\t\tlet interruptionCount: number;\n\t\tdo {\n\t\t\tthis.waitForAnimations = true;\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\n\t\t\t\tthis.atQueueEnd = true;\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\n\t\t\t\tthis.stopSeeking();\n\t\t\t\tif (this.ended) {\n\t\t\t\t\tthis.scene.updateBgm();\n\t\t\t\t}\n\t\t\t\tthis.subscription?.('atqueueend');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\n\t\t\tthis.currentStep++;\n\t\t\tif (this.waitForAnimations === true) {\n\t\t\t\tanimations = this.scene.finishAnimations();\n\t\t\t} else if (this.waitForAnimations === 'simult') {\n\t\t\t\tthis.scene.timeOffset = 0;\n\t\t\t}\n\n\t\t\tif (Date.now() - time > 300) {\n\t\t\t\tinterruptionCount = this.scene.interruptionCount;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (interruptionCount === this.scene.interruptionCount) {\n\t\t\t\t\t\tthis.nextStep();\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} while (!animations && this.shouldStep());\n\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\n\t\t\t// initial Play button, team preview\n\t\t\tthis.scene.pause();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!animations) return;\n\n\t\tinterruptionCount = this.scene.interruptionCount;\n\t\tanimations.done(() => {\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\n\t\t\t\tthis.nextStep();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetQueue(queue: string[]) {\n\t\tthis.stepQueue = queue;\n\t\tthis.resetStep();\n\t}\n\n\tsetMute(mute: boolean) {\n\t\tthis.scene.setMute(mute);\n\t}\n}\n\nif (typeof require === 'function') {\n\t// in Node\n\t(global as any).Battle = Battle;\n\t(global as any).Pokemon = Pokemon;\n}\n"],"mappings":"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"}